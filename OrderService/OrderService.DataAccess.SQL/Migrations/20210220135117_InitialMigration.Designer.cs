// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderService.DataAccess.SQL;

namespace OrderService.DataAccess.SQL.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210220135117_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("OrderService.DataAccess.SQL.OrderDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BillingAddressId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<short>("OrderStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("PaymentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PromotionId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ReceipentAddressId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7e424f5-2f4e-483a-a86b-c2cd62d2b045"),
                            BillingAddressId = "New Address",
                            CreatedAt = new DateTime(2021, 2, 20, 19, 21, 16, 679, DateTimeKind.Local).AddTicks(6792),
                            CustomerId = "c2bcee97-8df0-463d-9215-2643d16da53b",
                            InvoiceNumber = "#12345",
                            ModifiedDate = new DateTime(2021, 2, 20, 19, 21, 16, 680, DateTimeKind.Local).AddTicks(6293),
                            OrderDate = new DateTime(2021, 2, 20, 19, 21, 16, 680, DateTimeKind.Local).AddTicks(6760),
                            OrderStatus = (short)0,
                            PaymentId = "81636740-b044-47da-8588-876b66718c1b",
                            PromotionId = "#1qaz2wsx",
                            ReceipentAddressId = "New Address"
                        },
                        new
                        {
                            Id = new Guid("914ec668-299c-47af-91a0-0dc6d7db9eb9"),
                            BillingAddressId = "Old Address",
                            CreatedAt = new DateTime(2021, 2, 20, 19, 21, 16, 680, DateTimeKind.Local).AddTicks(8766),
                            CustomerId = "bc696332-9ead-4af2-89d3-05cc3c2e8c20",
                            InvoiceNumber = "#4567",
                            ModifiedDate = new DateTime(2021, 2, 20, 19, 21, 16, 680, DateTimeKind.Local).AddTicks(8810),
                            OrderDate = new DateTime(2021, 2, 20, 19, 21, 16, 680, DateTimeKind.Local).AddTicks(8818),
                            OrderStatus = (short)1,
                            PaymentId = "9f13cec1-86a1-4fa2-9f3e-60a674231b00",
                            PromotionId = "#3edc$RFV",
                            ReceipentAddressId = "Old Address"
                        });
                });

            modelBuilder.Entity("OrderService.DataAccess.SQL.ProductOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrderId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("ProductPurchasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("ProductOrderDetail");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e85bec29-167c-475f-a82b-a650ff7a4747"),
                            CreatedAt = new DateTime(2021, 2, 20, 19, 21, 16, 682, DateTimeKind.Local).AddTicks(7706),
                            ModifiedDate = new DateTime(2021, 2, 20, 19, 21, 16, 682, DateTimeKind.Local).AddTicks(8166),
                            OrderId = "d7e424f5-2f4e-483a-a86b-c2cd62d2b045",
                            ProductId = "1243",
                            ProductPurchasePrice = 0m,
                            Quantity = 2,
                            SKU = "1235",
                            Tax = 12m
                        },
                        new
                        {
                            Id = new Guid("f02da202-224f-4c44-930e-e4e8ba621f86"),
                            CreatedAt = new DateTime(2021, 2, 20, 19, 21, 16, 683, DateTimeKind.Local).AddTicks(2),
                            ModifiedDate = new DateTime(2021, 2, 20, 19, 21, 16, 683, DateTimeKind.Local).AddTicks(10),
                            OrderId = "914ec668-299c-47af-91a0-0dc6d7db9eb9",
                            ProductId = "1241",
                            ProductPurchasePrice = 0m,
                            Quantity = 2,
                            SKU = "1234",
                            Tax = 12m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
